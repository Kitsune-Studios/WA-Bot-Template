name: CI/CD Pipeline

on:
  workflow_dispatch:

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
  PULUMI_STACK_NAME: dev
  GCP_REGION: us-central1
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  build:
    name: Build & Sync Project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.11"
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          prune-cache: false
          ignore-nothing-to-cache: true
      - name: Sync the dependencies from the pyproject.toml
        run: uv sync --all-groups --dev
      - name: Lint code with Ruff
        run: uvx ruff check
      - name: Check code formatting with Ruff
        run: uvx ruff format
      - name: Install pre-commit
        run: uv add pre-commit
      - name: Run pre-commit hooks
        run: pre-commit run --all-files
      - name: Build Docker image
        run: docker build -t my-docker-image .
      - name: Push Docker image
        run: docker push my-docker-image

  tests:
    name: Run tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.11"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: ${{ matrix.python-version }}
      - name: Sync the dependencies from the pyproject.toml
        run: uv sync --all-extras --dev
      - name: Run tests with pytest
        run: uv run nox -s tests

  deploy:
    name: Pulumi Deploy
    needs: [tests, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to repo
        uses: actions/checkout@v4
      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          pyproject-file: "pyproject.toml"
      - name: Sync uv dependencies
        run: uv sync --all-extras --dev
      - name: Setup Cloud Provider
        if: ${{ github.actor != 'carlosferreyra' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Pulumi Up
        uses: pulumi/actions@v6
        with:
          command: up
          stack-name: ${{ env.PULUMI_STACK_NAME }}
          upsert: true
          refresh: true
          work-dir: infra/
          comment-on-summary: true
          diff: true
