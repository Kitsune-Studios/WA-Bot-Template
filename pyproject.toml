# This file is used to configure the project and its dependencies
# For more information about this pyproject.toml, see UV documentation: https://github.com/astral-sh/uv/blob/main/docs/reference/settings.md
[project]
name = "wa-bot-template"
version = "0.1.1"
description = "Template for WA bot using FastAPI and uv"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
authors = [
    { name = "Lautaro Pacella", email = "lautaropacella@hotmail.com" },
    { name = "Carlos Ferreyra", email = "eduferreyraok@gmail.com" },
]
maintainers = [{ name = "Carlos Ferreyra", email = "eduferreyraok@gmail.com" }]
keywords = ["whatsapp", "bot", "fastapi", "uv"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
    "License :: OSI Approved :: MIT License",
]

dependencies = [
    "boto3>=1.35.94",
    "fastapi[standard]>=0.115.6",
    "mangum>=0.19.0",
    "ngrok>=1.4.0",
    "nox>=2024.10.9",
    "pre-commit>=4.0.1",
    "pulumi>=3.146.0",
    "pulumi-aws>=6.66.3",
    "pulumi-awsx>=2.21.0",
    "pulumi-docker>=4.6.1",
    "pulumi-esc-sdk>=0.11.0",
    "pulumi-gcp>=8.14.0",
    "pulumi-github>=6.6.0",
    "pulumi-random>=4.16.8",
    "requests>=2.32.3",
    "uvicorn>=0.34.0",
    "python-dotenv>=1.0.1",
]

[dependency-groups]
dev = [
    "factory-boy>=3.3.3",
    "faker>=36.1.0",
    "httpx>=0.28.1",
    "pyright[nodejs]>=1.1.392.post0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=6.0.0",
]

# UV configuration
[tool.uv]
preview = true
default-groups = ["dev"]
required-version = ">=0.5.18"
upgrade = true

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["ALL"]
ignore = ["S", "D104", "ERA001", "INP001","PLR2004"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-v --cov=backend --cov-report=term-missing --asyncio-mode=auto"
testpaths = ["tests"]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["backend"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]
show_missing = true
fail_under = 80
